This is how I would handle it.

1) Update all windows systems with a script and have the script set on common ports and demonized. Windows 10 most recent update would need to be installed on all the hardware. However not after 0s and then 1s were written to non-volatile random access memory, volatile random access memory and read only memory.(on infected machines and infrastructure only). All swaps and caches would have to be dumped and removed, including the hypervisors. Which could be a very very long line of hypervisors.

2) Sandboxes or "containers" don't really keep viruses out any more than the compartments kept water out of the Titanic. The master node of each domain is where the infection can be cut off. Everything inside each domain can be overwritten. We need a stronger method of encryption and the fingerprint isn't doing it well enough because 32-bit and 64-bit integers dont have the entropy required for sophisticated systems. I would have a 3 key process instead of a 2 key process. The key pair certificate relationship can be middle manned or guessed and brute forced far to easily especially with Graphical processing units and other techniques. Instead of having a preset key pair I would have one key pair represent one equation that can only be solved by L'hôpital's rule in differential calculus. However I would have one priv key have the numerator, one have the denominator so unless you had them both they would be useless. The reasoning is that the would be unauthorized user wouldn't even know 1) what the other equation is to try to brute force it, 2) L'hôpital's even had to be applied. or 3) even if they did crack one key. That key individually would be incorrect, dauth the user and a new key would be generated via script. Then a 3rd key needs to be creativily integrated into the equation. I would have it as the exponent in both equations with one being the inverse of the other. Euler's Gamma Function would be a great candidate because we would want something chasing its tail infinitely.

3) To add an extra layer of security you would want to change each extremely secret and sensitive directory using the 'chmod' bash command. However I would alter it discreetly so that a chmod 0900 would do 2 things. 1) prepend it with a ".",
As well as prepend with a "\\  _" 2) Change it's colour to emulate the hosts, like a chameleon. So text would be invisible.

4) Passwords can't have a static value. They need to have a dynamic value that constantly changes until a stage 1 key is entered correctly.

There's a lot of ideas I have with respect to securing networks. These are just a few off the top of my head. However fire in this case must be faught with a malware type cure. It is in my opinion the only way it could be done. Also, any system that lacks entropy needs to hooked up to the internet through a system that has a very lopsided level of entropy in comparison. For example 0-32 bit systems must be hypervised by a system. With a minimal level of sophistication greater, like 256 bits for example.
